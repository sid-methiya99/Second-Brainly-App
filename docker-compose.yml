version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:latest
    container_name: second-brainly-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: second-brainly
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - second-brainly-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Express (Optional - for database management)
  mongo-express:
    image: mongo-express:latest
    container_name: second-brainly-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password123
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - second-brainly-network
    profiles:
      - dev

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: second-brainly-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGO_URL=mongodb://admin:password123@mongo:27017/second-brainly?authSource=admin
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - CORS_ORIGIN=http://localhost:5173,http://localhost:3000
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - second-brainly-network
    volumes:
      - ./backend/uploads:/app/backend/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service (Development)
  frontend-dev:
    build:
      context: ./brainly-frontend
      dockerfile: Dockerfile.dev
    container_name: second-brainly-frontend-dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:3000/api/v1
      - VITE_DEV_SERVER_HOST=0.0.0.0
    volumes:
      - ./brainly-frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - second-brainly-network
    profiles:
      - dev

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: second-brainly-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./brainly-frontend/dist:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - second-brainly-network
    profiles:
      - prod

volumes:
  mongo_data:
    driver: local

networks:
  second-brainly-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
